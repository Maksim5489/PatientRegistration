@model WebApplication1.Models.PatientModels
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Create";
}

<h2>Оформление мед.карты</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PatientModels</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "Female",
                    Value = "Female"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Male",
                    Value = "Male",
                    Selected = true
                });
            }

            @Html.DropDownListFor(model => model.Gender, listItems, "-- Выберите --")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FIO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FIO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FIO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date_of_Birth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date_of_Birth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date_of_Birth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Policy_number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Policy_number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Policy_number, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PassportID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PassportID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PassportID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Job, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Job, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Disability, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItems1 = new List<SelectListItem>();
                listItems1.Add(new SelectListItem
                {
                    Text = "Yes",
                    Value = "Yes"
                });
                listItems1.Add(new SelectListItem
                {
                    Text = "No",
                    Value = "No",
                    Selected = true
                });
            }

            @Html.DropDownListFor(model => model.Disability, listItems1, "-- Выберите --")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Chronic_diseases, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItems2 = new List<SelectListItem>();
                listItems2.Add(new SelectListItem
                {
                    Text = "Yes",
                    Value = "Yes"
                });
                listItems2.Add(new SelectListItem
                {
                    Text = "No",
                    Value = "No",
                    Selected = true
                });
            }

            @Html.DropDownListFor(model => model.Chronic_diseases, listItems2, "-- Выберите --")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItems3 = new List<SelectListItem>();
                listItems3.Add(new SelectListItem
                {
                    Text = User.Identity.GetUserName(),
                    Value = User.Identity.GetUserName()
                });
            }

            @Html.DropDownListFor(model => model.Email, listItems3)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
